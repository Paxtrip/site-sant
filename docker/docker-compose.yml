services:
  # База данных PostgreSQL
  db:
    image: postgres:14-alpine
    container_name: portal_db
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-strapi}
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi -d strapi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (Strapi)
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: portal_backend
    env_file:
      - ../backend/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT:-postgres}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-strapi}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "1337:1337"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/opt/app # Для разработки с hot-reload

  # Frontend (Next.js)
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: portal_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_STRAPI_API_URL: http://backend:1337
      NODE_ENV: ${NODE_ENV:-production}
    depends_on:
      - backend
    volumes:
      - ../frontend:/app # Для разработки с hot-reload
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
